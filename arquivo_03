IMPORT STD;
// Algumas Definições
EXPORT ModCPFG := MODULE

  // Layout dos Dados
  EXPORT CPGFLayout := RECORD
    STRING CODIGO_ORGAO_SUPERIOR;
    STRING NOME_ORGAO_SUPERIOR;
    STRING CODIGO_ORGAO;
    STRING NOME_ORGAO;
    STRING CODIGO_UNIDADE_GESTORA;
    STRING NOME_UNIDADE_GESTORA;
    STRING ANO_EXTRATO;
    STRING MES_EXTRATO;
    STRING CPF_PORTADOR;
    STRING NOME_PORTADOR;
    STRING CNPJ_OU_CPF_FAVORECIDO;
    STRING NOME_FAVORECIDO;
    STRING TRANSACAO;
    STRING DATA_TRANSACAO;
    STRING VALOR_TRANSACAO;
  END;

  // Usar o layout para dados de verdade.. =)
  EXPORT dataset_1 := DATASET('~workshop::XX::201909_cpgf', CPGFLayout, CSV(heading(1)));
  EXPORT dataset_2 := DATASET('~workshop::XX::201909_cpgf', CPGFLayout, CSV(heading(1)));
  EXPORT dataset_3 := DATASET('~workshop::XX::201909_cpgf', CPGFLayout, CSV(heading(1)));
  
  // Juntamos tudo e temos um único dataset
  EXPORT DatasetCPFG := dataset_1 + dataset_2 + dataset_3;
END;

// Adicionar o UID ao nosso layout
UID_Layout := RECORD
  UNSIGNED uid; 
  ModCPFG.CPGFLayout;
END;

// Definimos como queremos que nossos dados sejam transformados
UID_Layout MinhaTransformacao (ModCPFG.CPGFLayout L, UNSIGNED cnt) := TRANSFORM
  SELF.uid := cnt;
  SELF.NOME_ORGAO := STD.Str.toUpperCase(L.NOME_ORGAO);
  SELF.NOME_FAVORECIDO := STD.Str.toUpperCase(L.NOME_FAVORECIDO);
  SELF := L;
END;

// Aplicamos a transformação em cada um dos dados do nosso dataset
EXPORT UID_NovoCPFG := PROJECT(ModCPFG.DatasetCPFG, MinhaTransformacao(LEFT, COUNTER));

EXPORT LayoutTabulado := RECORD
  UID_NovoCPFG.CPF_PORTADOR;
  UID_NovoCPFG.NOME_PORTADOR;
  UNSIGNED Qtde := COUNT(GROUP);
  // Extra: Soma de valores gastos
  REAL ValorTotal := SUM(GROUP, (REAL)REGEXREPLACE(',', UID_NovoCPFG.VALOR_TRANSACAO, '.');
END;

// Aplicar a tabulação aos dados
EXPORT DadosTabulados := TABLE(UID_NovoCPFG, LayoutTabulado, CPF_PORTADOR, NOME_PORTADOR);

// Vamos ver como ficaram os dados.. =)
OUTPUT(COUNT(DadosTabulados));
OUTPUT(DadosTabulados);
